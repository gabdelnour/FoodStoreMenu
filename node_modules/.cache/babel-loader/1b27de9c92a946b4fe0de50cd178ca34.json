{"ast":null,"code":"import _regeneratorRuntime from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _assertThisInitialized from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import firebase from'firebase';import AddFishForm from'./AddFishForm';import EditFishForm from'./EditFishForm';import Login from'./Login';import base,{firebaseApp}from'../base';var Inventory=/*#__PURE__*/function(_React$Component){_inherits(Inventory,_React$Component);function Inventory(){var _getPrototypeOf2;var _this;_classCallCheck(this,Inventory);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={uid:null,owner:null};_this.authHandler=function _callee(authData){var store;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(base.fetch(_this.props.storeId,{context:_assertThisInitialized(_this)}));case 2:store=_context.sent;console.log(store);// 2. Claim it if there is no owner\nif(store.owner){_context.next=7;break;}_context.next=7;return _regeneratorRuntime.awrap(base.post(\"\".concat(_this.props.storeId,\"/owner\"),{data:authData.user.uid}));case 7:// 3. Set the state of the inventory component to reflect the current user\n_this.setState({uid:authData.user.uid,owner:store.owner||authData.user.uid});console.log(authData);case 9:case\"end\":return _context.stop();}}});};_this.authenticate=function(provider){var authProvider=new firebase.auth[\"\".concat(provider,\"AuthProvider\")]();firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler);};_this.logout=function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('Logging out!');_context2.next=3;return _regeneratorRuntime.awrap(firebase.auth().signOut());case 3:_this.setState({uid:null});case 4:case\"end\":return _context2.stop();}}});};return _this;}_createClass(Inventory,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;firebase.auth().onAuthStateChanged(function(user){if(user){_this2.authHandler({user:user});}});}},{key:\"render\",value:function render(){var _this3=this;var logout=React.createElement(\"button\",{onClick:this.logout},\"Log Out!\");// 1. check if they are logged in\nif(!this.state.uid){return React.createElement(Login,{authenticate:this.authenticate});}// 2. check if they are not the owner of the store\nif(this.state.uid!==this.state.owner){return React.createElement(\"div\",null,React.createElement(\"p\",null,\"Sorry You are not the owner!\"),logout);}// 3. They must be the owner, just rendr the inventory\nreturn React.createElement(\"div\",{className:\"inventory\"},React.createElement(\"h2\",null,\"Inventory\"),logout,Object.keys(this.props.fishes).map(function(key){return React.createElement(EditFishForm,{key:key,index:key,fish:_this3.props.fishes[key],updateFish:_this3.props.updateFish,deleteFish:_this3.props.deleteFish});}),React.createElement(AddFishForm,{addFish:this.props.addFish}),React.createElement(\"button\",{onClick:this.props.loadSampleFishes},\"Load Sample fishes\"));}}]);return Inventory;}(React.Component);export default Inventory;","map":{"version":3,"sources":["/Users/gustavoabdelnour/Desktop/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/Inventory.js"],"names":["React","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","fetch","props","storeId","context","store","console","log","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport firebase from 'firebase'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport base, { firebaseApp } from '../base'\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n  \n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, {context: this })\n    console.log(store)\n    // 2. Claim it if there is no owner\n    if (!store.owner){\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n    console.log(authData)\n  }\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]()\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n  }\n\n  logout = async () => {\n    console.log('Logging out!')\n    await firebase.auth().signOut()\n    this.setState({uid: null })\n  }\n  \n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n    // 1. check if they are logged in\n    if(!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>;\n    }\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner){\n      return (\n        <div>\n          <p>Sorry You are not the owner!</p>\n          {logout}\n        </div>\n      )\n    }\n    // 3. They must be the owner, just rendr the inventory\n    return (\n    <div className=\"inventory\">\n      <h2>Inventory</h2>\n      {logout}\n      {Object.keys(this.props.fishes).map(key => (\n        <EditFishForm \n          key={key} \n          index={key}\n          fish={this.props.fishes[key]} \n          updateFish={this.props.updateFish}\n          deleteFish={this.props.deleteFish}\n        />\n      ))}\n      <AddFishForm addFish={this.props.addFish}/>\n      <button onClick={this.props.loadSampleFishes}>\n        Load Sample fishes\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}