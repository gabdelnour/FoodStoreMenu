{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","statusRef","priceRef","imageRef","descRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","store","console","log","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a0b50d64.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object\n  }\n  goToStore = event => {\n    // 1. Stop the form from submitting\n    event.preventDefault();\n    // 2. get the text from that input\n    const storeName = (this.myInput.current.value);\n    // 3. Change the page to /store/whatever-they-entered\n    this.props.history.push(`/store/${storeName}`)\n  };\n  \n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  }\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before we continue!\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : \"fish\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef()\n  statusRef = React.createRef()\n  priceRef = React.createRef()\n  imageRef = React.createRef()\n  descRef = React.createRef()\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish= event => {\n    //1 stop form from submitting\n    event.preventDefault()\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value), \n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    }\n    this.props.addFish(fish)\n    // refresh the form\n    event.currentTarget.reset()\n  }\n\n  render() {\n    return (\n    <form className=\"fish-edit\" onSubmit={this.createFish}>\n      <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n      <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n      <select name=\"status\" ref={this.statusRef}>\n        <option value=\"available\">Fresh!</option>\n        <option value=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"/>\n      <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n      <button type=\"submit\">+ Add fish</button>\n    </form>\n    )\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number}),\n    index: PropTypes.string,\n    updatedFish: PropTypes.func\n  }\n  handleChange = (event) => {\n    //update that fish\n    // 1. take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    }\n    this.props.updateFish(this.props.index, updatedFish)\n  }\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\" \n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        <button onClick={ () => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n      \n    )\n  }\n}\n\nexport default EditFishForm","import React from 'react'\nimport PropTypes from \"prop-types\"\n\nconst Login = (props) => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Log in with Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Log in with Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Log in with Twitter\n    </button>\n  </nav>\n)\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n}\n\nexport default Login","import Rebase from 're-base'\nimport firebase from '@firebase/app'\nimport 'firebase/database'\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBeuFt75MGMT91Dk7uMFhodu_zYFITMDSk\",\n  authDomain: \"catch-of-the-day-gustavo.firebaseapp.com\",\n  databaseURL: \"https://catch-of-the-day-gustavo.firebaseio.com\",\n})\n\nconst base = Rebase.createClass(firebaseApp.database())\n\n// Named Export\nexport { firebaseApp }\n\n// this is a default export\nexport default base","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport firebase from 'firebase'\nimport AddFishForm from './AddFishForm'\nimport EditFishForm from './EditFishForm'\nimport Login from './Login'\nimport base, { firebaseApp } from '../base'\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null\n  }\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.authHandler({ user })\n      }\n    })\n  }\n  \n  authHandler = async authData => {\n    // 1. Look up the current store in the firebase database\n    const store = await base.fetch(this.props.storeId, {context: this })\n    console.log(store)\n    // 2. Claim it if there is no owner\n    if (!store.owner){\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      })\n    }\n    // 3. Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    })\n    console.log(authData)\n  }\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]()\n    firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler)\n  }\n\n  logout = async () => {\n    console.log('Logging out!')\n    await firebase.auth().signOut()\n    this.setState({uid: null })\n  }\n  \n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>\n    // 1. check if they are logged in\n    if(!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>;\n    }\n    // 2. check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner){\n      return (\n        <div>\n          <p>Sorry You are not the owner!</p>\n          {logout}\n        </div>\n      )\n    }\n    // 3. They must be the owner, just rendr the inventory\n    return (\n    <div className=\"inventory\">\n      <h2>Inventory</h2>\n      {logout}\n      {Object.keys(this.props.fishes).map(key => (\n        <EditFishForm \n          key={key} \n          index={key}\n          fish={this.props.fishes[key]} \n          updateFish={this.props.updateFish}\n          deleteFish={this.props.deleteFish}\n        />\n      ))}\n      <AddFishForm addFish={this.props.addFish}/>\n      <button onClick={this.props.loadSampleFishes}>\n        Load Sample fishes\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport { formatPrice } from '../helpers'\n\nclass Fish extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({ \n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  }\n  render() {\n    const {image, name, price, desc, status} = this.props.details\n    const isAvailable = status === 'available'\n    return <li className=\"menu-fish\">\n      <img src={image} alt={name}/>\n      <h3 className=\"fish-name\">{name}\n        <span className=\"price\">{formatPrice(price)}</span>\n      </h3>\n      <p>{desc}</p>\n      <button disabled={!isAvailable} onClick={() => this.props.addToOrder(this.props.index)}>\n        {isAvailable ? 'Add To Cart' : 'Sold Out'}\n      </button>\n    </li>\n  }\n}\n\n\nexport default Fish;\n","import React from \"react\";\nimport PropTypes from \"prop-types\"\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleFishes from '../sample-fishes'\nimport Fish from \"./Fish\"\nimport base from '../base'\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {},\n  }\n  \n  static propTypes = {\n    match: PropTypes.object\n  }\n  componentDidMount() {\n    const { params } = this.props.match\n    const localStorageRef = localStorage.getItem(params.storeId)\n    if(localStorageRef){\n      this.setState({ order: JSON.parse(localStorageRef)})\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`,\n     {context: this, \n      state: 'fishes'\n    })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref)\n  }\n\n  \n\n  addFish = fish => {\n    // 1. Take a copy of the existing state\n    const fishes = {...this.state.fishes }\n    // 2. Add our new fish to that fishes variable\n    fishes[`fish${Date.now()}`] = fish\n    // 3. Set the new fishes object to state\n    this.setState({ fishes })\n  }\n\n  updateFish = (key, updatedFish) => {\n    const fishes = {...this.state.fishes}\n    fishes[key] = updatedFish\n    this.setState({ fishes })\n  }\n\n  deleteFish = (key) => {\n    //1. take a copy of state\n    const fishes = {...this.state.fishes}\n    // 2. update the state\n    fishes[key] = null\n    // 3. update state\n    this.setState({ fishes }) \n  }\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes })\n  }\n\n  addToOrder = (key) => {\n    // 1. take a copy of state\n    const order = {...this.state.order}\n    // 2.  Either add to order or update order number\n    order[key] = order[key] + 1 || 1\n    // 3. Call setState to update our state object\n    this.setState({ order })\n  }\n\n  removeFromOrder = (key) => {\n        const order = {...this.state.order}\n        delete order[key]\n        this.setState({ order })\n  }\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"Fresh Seafood Market\"/>\n          <ul className=\"fishes\">\n            {\n              Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder}/>)\n            }\n          </ul>\n        </div>\n        <Order \n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2> NotFound!?!!!!!</h2>\n  </div>\n)\n\nexport default NotFound","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport StorePicker from './StorePicker'\nimport App from './App'\nimport NotFound from './NotFound'\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker}/>\n      <Route path=\"/store/:storeId\" component={App}/>\n      <Route component={NotFound}/>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react'\nimport { render } from 'react-dom'\nimport Router from './components/Router'\n\nimport './css/style.css'\n\nrender (<Router/>, document.querySelector('#main'))"],"sourceRoot":""}